#!/usr/bin/env ruby

require 'json'
require_relative 'scrub_json.rb'

# check for correct number of arguments
if ARGV.length != 2
  puts
  puts "*** ERROR: Incorrect number of arguments ***"
  puts "You passed #{ARGV.length} arguments, but this script requires exactly 2 arguments."
  puts "Example: ./script.rb sensitive_fields.txt input.json"
  puts "********"
  exit 1
end

# Wrapping the File.open in `begin` and `ensure` ensures that the file
# will be closed even if an exception is raised.

# Parse the sensitive fields file.
begin
  sensitive_fields_file = File.open(ARGV[0])
  sensitive_fields = sensitive_fields_file.readlines.map(&:strip)
rescue => e
  puts "Error occurred while reading sensitive fields file '#{ARGV[0]}': #{e.message}"
  exit
ensure
  sensitive_fields_file.close if sensitive_fields_file
end

begin
  input_json_file = File.open(ARGV[1])
  input_json = JSON.parse(input_json_file.read)
rescue JSON::ParserError => e
  puts "Error occurred while parsing input JSON file: #{e.message}"
  exit
rescue => e
  puts "Error occurred while reading input JSON file: #{e.message}"
  exit
ensure
  input_json_file.close if input_json_file
end

scrubber = ScrubJson.new(sensitive_fields, input_json)

scrubber.scrub

# The output of the script is saved in the instance variable `@input_json`.
output = scrubber.instance_variable_get(:@input_json)
puts output.to_json


